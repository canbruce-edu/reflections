When would you want to use a remote repository rather than keeping all your work local?

  You may want to keep a remote backup. Also, you may be collaborating with multiple collaborators.

Why might you want to always pull changes manually rather than having Git automatically stay up-to-date with your remote repository?

	You may have local changes that you don't want to be overwritten.

Describe the differences between forks, clones, and branches. When would you use one instead of another?
	
	Fork is a clone of a GitHub repository made to another location on GitHub. Clone is a copy of a repository that may exist on GitHub or your local machine. Branch is a chain of commits. You would fork someone else's repository if you want to modify it without touching the original creator's repo. You clone a repo usually to be able to work more conveniently on it, like when you are writing new code. A new branch is created within a clone or fork when you want to create an alternative chain of edits from the main branch. You would do this to be able to develop a new feature, or even a new algorithm, without messing up the production code.

What is the benefit of having a copy of the last known state of the remote stored locally?

	You can know wheter the local commit is ahead of GitHub.


How would you collaborate without using Git or GitHub? What would be easier, and what would be harder?
	
	You could use Git without GitHub if you are not collaborating with others. Or you could use a private GitHub-like server on your internal network. Without Git, you could achieve eveything by email and perhaps a simple database, but it would be very cumbersome.

When would you want to make changes in a separate branch rather than directly in master? What benefits does each approach have?
	
	You make changes to a separate branch when it is not ready to be merged into the master. The disadvantage is that staying synchronized with the changes with the other changes going on in the master is more complicated.